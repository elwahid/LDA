/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lda_classification;

import com.mysql.jdbc.Connection;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author GITS
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public String username = "root";
    public String password = "";
    public String conn_string = "jdbc:mysql://localhost:3306/lda";
    private BufferedImage imageOriginal;
    private BufferedImage imageCrop;
    private BufferedImage imageThreshold;
    private BufferedImage imageHSV;
    private BufferedImage imageGoal;
    BufferedImage buffImage = null;
    Image image;Image HSV;Image imageReal;
    int hasil;
    double hasil2;
    double mean=0,entropy=0;
    public Connection conn;
    double hue, saturation, value;
    public MainMenu() {
        conn = null;
        try{
            conn = (Connection) DriverManager.getConnection(conn_string,username,password);
            System.out.println("Connected");
        }catch(SQLException e){
            System.err.println(e);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Classification");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add Data Training");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jLabel1);

        jLabel3.setBackground(new java.awt.Color(153, 153, 255));
        jScrollPane2.setViewportView(jLabel3);

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane3.setViewportView(jLabel2);

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel4MouseMoved(evt);
            }
        });
        jScrollPane4.setViewportView(jLabel4);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fitur", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel6.setText("Mean :");

        jLabel7.setText("Entropy :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hasil Klasifikasi", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel5.setText("KELAS");

        jLabel8.setText("F1 :");

        jLabel9.setText("F2 :");

        jLabel10.setText("F3 :");

        jLabel11.setText("F4 :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("Hue : | Saturation: | Value :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel12)))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            
            image = null;
            try {
                buffImage = ImageIO.read(new File(file.getAbsolutePath()));
                imageReal = buffImage;
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (imageReal != null) {
                imageOriginal = toBufferedImage(imageReal, BufferedImage.TYPE_INT_ARGB);
                jLabel1.setIcon(new ImageIcon(imageOriginal));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        /*imageHSV = toBufferedImage(HSV, BufferedImage.TYPE_INT_ARGB);
        
        jLabel2.setIcon(new ImageIcon(imageThreshold));
        jLabel3.setIcon(new ImageIcon(imageCrop));
        jLabel4.setIcon(new ImageIcon(imageHSV));
        */
        Statement st,st1;
        try {
            st1 = conn.createStatement();
            String sql1 = ("SELECT COUNT(*) AS JUMLAH FROM fitur;");
            ResultSet rs1 = st1.executeQuery(sql1);
            int jml_baris=0;
            if(rs1.next()) {
                jml_baris=rs1.getInt("JUMLAH");
            }
            double [][]testing = new double[1][2];
            st = conn.createStatement();
            String sql = ("SELECT * FROM fitur;");
            ResultSet rs = st.executeQuery(sql);
            double [][]fitur = new double[jml_baris][2];
            
            Integer []kelas = new Integer[jml_baris];
            int param = 0;
            while(rs.next()) { 
                fitur[param][0] = rs.getDouble("mean");
                fitur[param][1] = rs.getDouble("entropy");
                kelas[param] = rs.getInt("kelas");
                param++;
            }
            //System.out.println(param);
            /*double [][]fitur = {
            {1.95,3.63},
            {1.27,3.52},
            {2.95,6.63},
            {3.27,3.52}
            };
            Integer []kelas = {1,1,2,2};*/
            testing[0][0] = Double.parseDouble(valueOf(mean));
            testing[0][1] = Double.parseDouble(valueOf(entropy));
            LDA klasifikasi = new LDA();
            double[] hasilklasifikasi = klasifikasi.LDA_Classification(fitur, kelas, testing);
            //System.out.println(hasilklasifikasi);
            if(hasilklasifikasi[0]==1){
                jLabel5.setText("Arum Manis Matang");
            }
            if(hasilklasifikasi[0]==2){
                jLabel5.setText("Arum Manis Mentah");
            }
            if(hasilklasifikasi[0]==3){
                jLabel5.setText("Manalagi Matang");
            }
            if(hasilklasifikasi[0]==4){
                jLabel5.setText("Manalagi Mentah");
            }
            jLabel8.setText("F1 : "+valueOf(hasilklasifikasi[1]));
            jLabel9.setText("F2 : "+valueOf(hasilklasifikasi[2]));
            jLabel10.setText("F3 : "+valueOf(hasilklasifikasi[3]));
            jLabel11.setText("F4 : "+valueOf(hasilklasifikasi[4]));
        } catch (SQLException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error klasifikasi");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (image != null) {
            try {
                String[] kelasmangga = {"1", "2", "3", "4"};
                JFrame frame = new JFrame("Input Dialog");
                String kelas = (String) JOptionPane.showInputDialog(frame, 
                    "Pilihan kelas?(1.Arum Manis Matang,2.Arum Manis Mentah,3.Manalagi Matang,4.Manalagi Mentah)",
                    "Kelas",
                    JOptionPane.QUESTION_MESSAGE,null,kelasmangga,kelasmangga[0]);
                int pilihan = Integer.parseInt(kelas);
                System.out.println(pilihan);
                Statement stmt = conn.createStatement();
                String query = " insert into fitur (mean, entropy, kelas)"
                    + " values (?, ?, ?)";

                // create the mysql insert preparedstatement
                PreparedStatement preparedStmt = conn.prepareStatement(query);
                preparedStmt.setString (1, valueOf(mean));
                preparedStmt.setString (2, valueOf(entropy));
                preparedStmt.setInt (3, pilihan);

                // execute the preparedstatement
                preparedStmt.execute();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Tidak ada gambar");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
        // TODO add your handling code here:
        try{
            BufferedImage croppedImage = buffImage.getSubimage(evt.getX()-105, evt.getY()-105, 210, 210);
            image = croppedImage.getScaledInstance(jLabel3.getWidth(),jLabel3.getHeight(), BufferedImage.TYPE_INT_BGR);
            imageCrop = toBufferedImage(image, BufferedImage.TYPE_INT_ARGB);
            jLabel3.setIcon(new ImageIcon(imageCrop));
            jLabel3.repaint();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jLabel1MouseMoved

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        mean = 0;
        entropy = 0;
        imageThreshold = toBufferedImage(image, BufferedImage.TYPE_BYTE_BINARY);
        jLabel2.setIcon(new ImageIcon(imageThreshold));
        imageHSV = new BufferedImage(imageCrop.getWidth(), imageCrop.getHeight(), BufferedImage.TYPE_INT_RGB);
        for (int y = 0; y < imageCrop.getHeight(); y++) {
            for (int x = 0; x < imageCrop.getWidth(); x++) {
                int rgb = imageCrop.getRGB(x, y);
                int red = (rgb >> 16) & 0xFF;
                int green = (rgb >> 8) & 0xFF;
                int blue = (rgb) & 0xFF;
                convertRGBtoHSV(red,green,blue,x,y,imageHSV);
                mean = mean+hasil2;
                entropy = entropy + (hasil2*Math.log(hasil2));
            }
        }
        mean = mean / (imageCrop.getHeight()*imageCrop.getWidth());
        System.out.println(mean);
        System.out.println(entropy);
        HSV = imageHSV.getScaledInstance(jLabel2.getWidth(),jLabel2.getHeight(), BufferedImage.TYPE_INT_BGR);
        jLabel4.setIcon(new ImageIcon(HSV));
        jLabel6.setText("Mean : "+valueOf(mean));
        jLabel7.setText("Entropy : "+valueOf(entropy));
        jLabel6.repaint();
        jLabel7.repaint();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseMoved
        // TODO add your handling code here:
        int rgb = imageCrop.getRGB(evt.getX(), evt.getY());
        int red = (rgb >> 16) & 0xFF;
        int green = (rgb >> 8) & 0xFF;
        int blue = (rgb) & 0xFF;
        convertRGBtoHSV(red,green,blue,evt.getX(),evt.getY(),imageHSV);
        jLabel12.setText("Hue : "+valueOf(hue)+" | Saturation : "+valueOf(saturation)+" | Value : "+valueOf(value));
        jLabel12.repaint();
    }//GEN-LAST:event_jLabel4MouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }
    private BufferedImage toBufferedImage(Icon icon) {
        BufferedImage bi = new BufferedImage(
                icon.getIconWidth(),
                icon.getIconHeight(),
                //                BufferedImage.TYPE_INT_RGB); // Original Image
                //                BufferedImage.TYPE_BYTE_GRAY); // Convert to Grayscale
                BufferedImage.TYPE_BYTE_BINARY); // Convert to Binary
        Graphics g = bi.createGraphics();
        icon.paintIcon(null, g, 0, 0);
        g.dispose();
        return bi;
    }

    public static BufferedImage toBufferedImage(Image img, int type) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }
        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null),
                img.getHeight(null), type);
        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();
        // Return the buffered image
        return bimage;
    }
    public void convertRGBtoHSV(double red, double green, double blue,int x, int y, BufferedImage Im) {
        
        double delta, min, max;

        min = Math.min(Math.min(red, green), blue);
        max = Math.max(Math.max(red, green), blue);

        delta = max - min;

        // Value
        value = max;

        // Saturation
        if (max == 0) {
            saturation = 0;
        } else {
            saturation = delta / max;
        }

        // Value
        if (delta == 1) {
            hue = 1;
        } else if (red == max) {
            hue = 60 * (((green - blue) / delta));
        } else if (green == max) {
            hue = 60 * (((blue - red) / delta) + 2);
        } else /*if (blue == max)*/ {
            hue = 60 * (((red - green) / delta) + 4);
        }
        
        value = (value / 255) * 100;
        saturation = saturation * 100;
        hasil2 = (hue+saturation+value)/3;
        hasil = (int) ((hue+saturation+value)/3);
        imageHSV.setRGB(x, y, hasil);
    }
    public String valueOf(double value) {
        return new DecimalFormat("#0.000").format(value);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
